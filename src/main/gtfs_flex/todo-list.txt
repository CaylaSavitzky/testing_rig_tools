
feature:
	latlngpopup with lat,lng rather than with whole words and colons



problem:
	oh gods this needs tests

problem:
	locations containing other locations sometimes have center stop in weird stop.
solution:
	colision checking

problem:
	this whole thing is a garbage mess of scripts
solution:
	- dao should take class and id and return val & accept obj and put into right location
		- would it make sense to have the dao handle making reciprocal relationships btwn relivant classes? tbh i don't think so, that feels wrong for access obj
	- gtfsObjs shouldn't have other objs attatched but instead identifiers (maybe a list of identifiers)
	- dao should be able to consume a list of identifiers 
	- maybe dao should be able to consume objId and property and if tthe obj has that property/list it finds the list and saves that info for precomputed? not worth it actually, assume more cycles than memory
	- maybe non-identifiers are only be created by the dao obj, and then there's a good spot to raise exception if someone tries to make two of the same

problem:
	doesn't handle a single gtfs with multiple agencies, or one gtfs referencing other agencies 
solution:
	should be pretty simple fix, just need to add recognition of agency_id to core GtfsObj


feature:
	describe active dates by trips
solution:
	min
		- pull in service ids
		- calc service id for given days
		- add info to trip line
	better
		- find out what normal service looks like and include that on trip line

feature:
	show text for related layers only

feature:
	control layer for day and control layer for agency
solution:
	not sure how to do this, having a layer per day per agency is garbage performance.
	a layer per service id
		- layer per serviceId
		- update or add interface to the layercontrol js to use mapping of agency and date to determine which layers are on

feature:
	popup click markers show what agency layer contains them or stop area or w/e

feature:
	vectors btwn locations arrows